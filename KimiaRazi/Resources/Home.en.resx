<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BigCompanyName" xml:space="preserve">
    <value>KimiaRazi</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>KimiaRazi</value>
  </data>
  <data name="Feature1Head" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="Feature1text" xml:space="preserve">
    <value>We are always in a close relation to the customers to achieve the best end product.</value>
  </data>
  <data name="Feature2Head" xml:space="preserve">
    <value>Quality</value>
  </data>
  <data name="Feature2text" xml:space="preserve">
    <value>Many reputable, successful and big Tile and Ceramic producers use KimiaRazi products.</value>
  </data>
  <data name="Feature3Head" xml:space="preserve">
    <value>Technology</value>
  </data>
  <data name="Feature3text" xml:space="preserve">
    <value>KimiaRazi apply the latest, most modern and advanced technology and equipment for designing and producing its products.</value>
  </data>
  <data name="Feature4Head" xml:space="preserve">
    <value>Experience</value>
  </data>
  <data name="Feature4text" xml:space="preserve">
    <value>KimiaRazi, with more than 30 year experience, is one of the oldest and biggest producers of frit and ceramic glaze in Iran.</value>
  </data>
  <data name="HomeLinkText" xml:space="preserve">
    <value>&lt;span class="light"&gt;Main&lt;/span&gt; Page</value>
    <comment>html</comment>
  </data>
  <data name="ogDesc" xml:space="preserve">
    <value>Glaze and inks for ceramic and tile producers.</value>
  </data>
  <data name="ogTitle" xml:space="preserve">
    <value>KimiaRazi</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>KimiaRazi - The first and biggest producer of glaze and inks for tile and ceramics in Iran.</value>
  </data>
  <data name="Policy" xml:space="preserve">
    <value>Our Policy</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>Read more</value>
  </data>
  <data name="Subheading1" xml:space="preserve">
    <value>The &lt;span class="colored-span"&gt;First&lt;/span&gt; and &lt;span class="colored-span"&gt;Biggest&lt;/span&gt; producer of&lt;br&gt;ceramic glazes and inks in Iran.</value>
    <comment>html</comment>
  </data>
  <data name="Subheading2" xml:space="preserve">
    <value>The most &lt;span class="colored-span"&gt;Diverse&lt;/span&gt; and &lt;span class="colored-span"&gt;Modern&lt;/span&gt; products&lt;br&gt;in Iran's ceramic glaze industry.</value>
    <comment>html</comment>
  </data>
  <data name="Subheading3" xml:space="preserve">
    <value />
    <comment>html</comment>
  </data>
</root>