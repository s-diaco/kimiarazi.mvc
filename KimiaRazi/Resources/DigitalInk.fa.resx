<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Beige" xml:space="preserve">
    <value>Beige</value>
  </data>
  <data name="Black" xml:space="preserve">
    <value>Black</value>
  </data>
  <data name="Blue" xml:space="preserve">
    <value>Blue</value>
  </data>
  <data name="Brown" xml:space="preserve">
    <value>Brown</value>
  </data>
  <data name="Cyan" xml:space="preserve">
    <value>Cyan</value>
  </data>
  <data name="Desc" xml:space="preserve">
    <value>&lt;p&gt;KimiaRazi is the first and only producer of tile digital printing ink in Iran. The product line equipped and ran in 2013 with co-operation of Italian companies. KimiaRazi received certification of quality from some of digital printer producers, therefore it supplies the required ink of various printer brands for different companies. KimiaRazi products can be used in: System, Intesa, Durst, Techno-Ferrari, Projecta, Kerajet, etc. printers. &lt;/p&gt;&lt;p&gt;KimiaRazi inks are produced with the latest and highest technology in the world with the highest different kinds of printers output and efficiency in ceramic industry.&lt;/p&gt;
&lt;p&gt;Because of very short gap between production and consumption time customers do not experience problem with expiry date of inks produced by KimiaRazi such as what with imported inks.&lt;/p&gt;&lt;p&gt;The inks and digital printers are well-matched and the quality certifications for applied products in various kinds of printers are conclusive evidence to support the claim.&lt;/p&gt;
                &lt;p&gt;Inks are produced in eight colors now, blue, cyan, yellow, honey, beige, brown, black and pink.&lt;/p&gt;</value>
    <comment>Html</comment>
  </data>
  <data name="Head" xml:space="preserve">
    <value>Digital printing Ink</value>
  </data>
  <data name="Honey" xml:space="preserve">
    <value>Honey</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Products - Digital Printing Ink</value>
  </data>
  <data name="Pink" xml:space="preserve">
    <value>Pink</value>
  </data>
  <data name="TableDlDesc" xml:space="preserve">
    <value>To download the file of technical specifications of inks click on the link bellow</value>
  </data>
  <data name="TableLinkText" xml:space="preserve">
    <value>KimiaRazi Ink Specifications Table</value>
  </data>
  <data name="WhyHead" xml:space="preserve">
    <value>Why KimiaRazi Inks?</value>
  </data>
  <data name="WhyList1" xml:space="preserve">
    <value>KimiaRazi experts are ready to provide any services of washing, replacing the companies ink in printers, creating a profile, matching the ex-designs and new ones, giving advice on digital inks, printing and design.</value>
  </data>
  <data name="WhyList2" xml:space="preserve">
    <value>KimiRazi inks have been replaced with the same ones from active reputable European suppliers in Iran market. Therefore the domestic inks are copared with the imported ones. The quality and color tone are competitive with the similar high quality foreign products on the market. Also there are more shades of some colors available in Iranian inks. It was found out that use of KimiaRazi ink in quantity is as much as the similar imported ones.</value>
  </data>
  <data name="WhyList3" xml:space="preserve">
    <value>Competitive pricing.</value>
  </data>
  <data name="WhyList4" xml:space="preserve">
    <value>The short time between producing and consuming reduce risk of ink sediment and increase the heads lifetime.</value>
  </data>
  <data name="WhyList5" xml:space="preserve">
    <value>No customs barriers and formalities.</value>
  </data>
  <data name="WhyList6" xml:space="preserve">
    <value>You can expect delivery within 3 days at most soon after the order being placed.  Regarding to certainty of delivery right on time there is no need to order inks in large quantity. Small stocks of ink decrease the possibility of date expiration.</value>
  </data>
  <data name="WhyList7" xml:space="preserve">
    <value>Even if date expires, it will be possible to return the product to the production process in KimiaRazi. Therefore, there will be no problem with system function and color shades.</value>
  </data>
  <data name="WhyList8" xml:space="preserve">
    <value>Regarding the short interval with initiating production process and putting the ink on to the market, the number of KimiaRazi ink customers are increasing rapidly.</value>
  </data>
  <data name="WhyList9" xml:space="preserve">
    <value>All ink laboratory tests are done with the latest technology and equipment with high accuracy and there is no doubt about the quality and stability of the product.</value>
  </data>
  <data name="Yellow" xml:space="preserve">
    <value>Yellow</value>
  </data>
</root>