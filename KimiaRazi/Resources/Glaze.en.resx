<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Conclusion" xml:space="preserve">
    <value>KimiaRazi recommeds using ready-to-use compounds.</value>
  </data>
  <data name="Desc" xml:space="preserve">
    <value>&lt;p&gt;Considering KimiaRazi high quality frits and raw and primary materials, it is one of the biggest Engob and glaze producers in Iran. Its experts design glaze and engob compounds on each customer order and request individually. The products include matt glaze in various surface effects appropriated to these kind of glazes, different types of engob with wide range of expansion coefficient and firing temperature are used for wall, monoporosa, floor, porselain tiles and many kinds of transparent and opaque glaze.&lt;/p&gt;
&lt;p&gt;KimiaRazi Ltd. has been glaze supplier of the reputable tile and ceramic producers in Iran.&lt;/p&gt;</value>
    <comment>Html</comment>
  </data>
  <data name="Head" xml:space="preserve">
    <value>Compounds</value>
  </data>
  <data name="List1" xml:space="preserve">
    <value>The ready-to-use engob and glaze compounds are produced fully automatically, with no possibility of personnel mistake in weighing and mixing the compounds.</value>
  </data>
  <data name="List2" xml:space="preserve">
    <value>KimiaRazi uses high quality and variable raw and primary materials in producing glaze and engob compounds.</value>
  </data>
  <data name="List3" xml:space="preserve">
    <value>As KimiaRazi experts are responsible for formulating the glazes, therefore the quality of the ready-in-use formulated engob and glaze compounds are so high.</value>
  </data>
  <data name="List4" xml:space="preserve">
    <value>If the tile and ceramic producers purchase ready-to-use compounds, they will not need to store raw and primary materials for producing compounds,.</value>
  </data>
  <data name="List5" xml:space="preserve">
    <value>KimiaRazi will be responsible for sorting out any problem occurs. The customer just deals with one supplier.</value>
  </data>
  <data name="List6" xml:space="preserve">
    <value>KimiaRazi provides extra consultancy services in case of raising any problem.</value>
  </data>
  <data name="List7" xml:space="preserve">
    <value>Eventually, customers improve the quality of products for mentioned reasons.</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Products - Compounds</value>
  </data>
  <data name="Prod1Feature" xml:space="preserve">
    <value />
  </data>
  <data name="Prod1H" xml:space="preserve">
    <value>Engob Compounds</value>
  </data>
  <data name="Prod1Subhead" xml:space="preserve">
    <value>KimiaRazi Ready-to-use Engob Compounds</value>
  </data>
  <data name="Prod1Text" xml:space="preserve">
    <value>The compounds are produced in full agreement with specifications at the request of the customer, expansion coefficient suitable for different bodies and glazes are ready to offer.</value>
  </data>
  <data name="Prod2Feature" xml:space="preserve">
    <value />
  </data>
  <data name="Prod2H" xml:space="preserve">
    <value>Matt Glaze</value>
  </data>
  <data name="Prod2Subhead" xml:space="preserve">
    <value>KimiaRazi Matt Glaze Compounds</value>
  </data>
  <data name="Prod2Text" xml:space="preserve">
    <value>Variant kinds of transparent and opaque matt glazes with hard and soft surface, high chemical resistance matched with different conditions of the customers are offered.</value>
  </data>
  <data name="Prod3Feature" xml:space="preserve">
    <value />
  </data>
  <data name="Prod3H" xml:space="preserve">
    <value>Transparent and Opaque Glaze</value>
  </data>
  <data name="Prod3Subhead" xml:space="preserve">
    <value>KimiaRazi Transparent and Opaque Glaze Compounds</value>
  </data>
  <data name="Prod3Text" xml:space="preserve">
    <value>The glazes perfectly match the customers’ requirements, are made from high quality frits and raw and primary materials are ready-to-use.</value>
  </data>
  <data name="Prod4Feature" xml:space="preserve">
    <value />
  </data>
  <data name="Prod4H" xml:space="preserve">
    <value />
  </data>
  <data name="Prod4Subhead" xml:space="preserve">
    <value />
  </data>
  <data name="Prod4Text" xml:space="preserve">
    <value />
  </data>
  <data name="Subhead" xml:space="preserve">
    <value>Ready-to-use Glaze and Engob compounds</value>
  </data>
  <data name="WhyHead" xml:space="preserve">
    <value>Lots of superior tile and ceramic producers are KimiaRazi glaze customers.</value>
  </data>
</root>